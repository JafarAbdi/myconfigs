tools:
  python-mypy: &python-mypy
    lint-command: 'micromamba run -n linters mypy --show-column-numbers --install-types --non-interactive --hide-error-codes --hide-error-context --no-color-output --no-error-summary --no-pretty'
    lint-formats:
      - '%f:%l:%c: %trror: %m'
      - '%f:%l:%c: %tarning: %m'
      - '%f:%l:%c: %tote: %m'
  python-black: &python-black
    format-command: 'micromamba run -n linters black --quiet -'
    format-stdin: true
  python-ruff: &python-ruff
    lint-command: 'micromamba run -n linters ruff --quiet ${INPUT}'
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m'
    # Warning
    lint-severity: 2
    # lint-formats:
    #     - '%f:%l:%c: %t%n %m'
    #     - '%f:%l:%c: %tNN%n %m'
    #     - '%f:%l:%c: %tTT%n %m'
    #     - '%f:%l:%c: %tUF%n %m'
    #     - '%f:%l:%c: %tBT%n %m'
    #     - '%f:%l:%c: %tLE%n %m'
    # lint-category-map:
    #   F: E  # pyflakes flake8-boolean-trap
    #   E: E  # pycodestyle
    #   I: H  # isort flake8-tidy-imports
    #   D: W  # pydocstyle
    #   U: W  # pyupgrade
    #   N: W  # pep8-naming
    #   S: W  # flake8-bandit
    #   C: E  # flake8-comprehensions mccabe
    #   B: E  # flake8-bugbear flake8-blind-except
    #   A: E  # flake8-builtins flake8-annotations
    #   T: E  # flake8-print
    #   Q: E  # flake8-quotes
    #   Y: E  # flake8-2020
    #   R: E  # ruff-specific rules
    #   M: E  # meta rules
    # format-command: 'micromamba run -n linters ruff --stdin-filename ${INPUT} --fix --exit-zero --quiet -'
    # format-stdin: true
  dockerfile-hadolint: &dockerfile-hadolint
    lint-command: 'hadolint --no-color'
    lint-formats:
      - '%f:%l %m'
    # Warning
    lint-severity: 2
languages:
  python:
    - <<: *python-black
    - <<: *python-ruff
    - <<: *python-mypy
  cmake:
    - lint-command: 'cmake-lint'
      lint-formats:
        - '%f:%l,%c: %m'
      lint-severity: 2
    - format-command: 'cmake-format -'
      format-stdin: true
  json:
    - lint-command: 'python3 -m json.tool'
      lint-stdin: true
      lint-formats:
        - '%m: line %l column %c (char %r)'
    - format-command: 'python3 -m json.tool'
      format-stdin: true
  markdown:
    - format-command: 'pandoc -f markdown -t gfm -sp --tab-stop=2'
      format-stdin: true
  rst:
    - format-command: 'pandoc -f rst -t rst -s --columns=79'
      format-stdin: true
    - lint-command: 'rstcheck -'
      lint-stdin: true
      lint-formats:
        - '%f:%l: (%tNFO/1) %m'
        - '%f:%l: (%tARNING/2) %m'
        - '%f:%l: (%tRROR/3) %m'
        - '%f:%l: (%tEVERE/4) %m'
  sh:
    - lint-command: 'shellcheck -f gcc -x -'
      lint-stdin: true
      lint-formats:
        - '%f:%l:%c: %trror: %m'
        - '%f:%l:%c: %tarning: %m'
        - '%f:%l:%c: %tote: %m'
  tex:
    - lint-command: 'chktex -v0 -q'
      lint-stdin: true
      lint-formats:
        - '%f:%l:%c:%m'
  yaml:
    - lint-command: 'yamllint -f parsable -'
      lint-stdin: true
  lua:
    - format-command: 'stylua --search-parent-directories -'
      format-stdin: true
  dockerfile:
    - <<: *dockerfile-hadolint
