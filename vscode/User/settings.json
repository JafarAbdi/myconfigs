{
  "C_Cpp.intelliSenseEngine": "disabled",
  "Lua.diagnostics.globals": [
    "vim"
  ],
  "Lua.runtime.version": "LuaJIT",
  "Lua.telemetry.enable": false,
  "[cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "breadcrumbs.enabled": false,
  "cSpell.enabled": true,
  "cSpell.import": [
    "~/myconfigs/.cspell.json"
  ],
  "clangd.checkUpdates": true,
  "clangd.path": "/home/jafar/.config/Code - Insiders/User/globalStorage/llvm-vs-code-extensions.vscode-clangd/install/15.0.3/clangd_15.0.3/bin/clangd",
  "cmake.buildDirectory": "/no_dir",
  "cmake.copyCompileCommands": "",
  "cmake.defaultVariants": {
    "buildType": {
      "choices": {
        "debug": {
          "buildType": "Debug",
          "long": "Disable optimizations - include debug information.",
          "short": "Debug"
        },
        "minsize": {
          "buildType": "MinSizeRel",
          "long": "Optimize for smallest binary size - exclude debug information.",
          "short": "MinSizeRel"
        },
        "reldeb": {
          "buildType": "RelWithDebInfo",
          "long": "Optimize for speed - include debug information.",
          "short": "RelWithDebInfo"
        },
        "release": {
          "buildType": "Release",
          "long": "Optimize for speed - exclude debug information.",
          "short": "Release"
        }
      },
      "description": "The build type."
    }
  },
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.inlineSuggest.enabled": true,
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.horizontalScrollbarSize": 0,
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.verticalScrollbarSize": 0,
  "editor.stickyScroll.enabled": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "files.simpleDialog.enable": true,
  "files.trimTrailingWhitespace": true,
  "git.enableStatusBarSync": false,
  "jupyter.interactiveWindowMode": "perFile",
  "python.formatting.provider": "black",
  "python.linting.mypyEnabled": true,
  "remote.SSH.remotePlatform": {
    "mylaptop": "linux"
  },
  "remote.SSH.useLocalServer": false,
  "remote.tunnels.alwaysUpdateCLI": true,
  "ruff.args": [
    "--config=/home/jafar/myconfigs/linters/ruff.toml"
  ],
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.completion.snippets.custom": {
    "Arc::new": {
      "body": "Arc::new(${receiver})",
      "description": "Put the expression into an `Arc`",
      "postfix": "arc",
      "requires": "std::sync::Arc",
      "scope": "expr"
    },
    "Box::pin": {
      "body": "Box::pin(${receiver})",
      "description": "Put the expression into a pinned `Box`",
      "postfix": "pinbox",
      "requires": "std::boxed::Box",
      "scope": "expr"
    },
    "Err": {
      "body": "Err(${receiver})",
      "description": "Wrap the expression in a `Result::Err`",
      "postfix": "err",
      "scope": "expr"
    },
    "Ok": {
      "body": "Ok(${receiver})",
      "description": "Wrap the expression in a `Result::Ok`",
      "postfix": "ok",
      "scope": "expr"
    },
    "Rc::new": {
      "body": "Rc::new(${receiver})",
      "description": "Put the expression into an `Rc`",
      "postfix": "rc",
      "requires": "std::rc::Rc",
      "scope": "expr"
    },
    "Some": {
      "body": "Some(${receiver})",
      "description": "Wrap the expression in an `Option::Some`",
      "postfix": "some",
      "scope": "expr"
    },
    "main": {
      "body": [
        "fn main() -> Result<(), Box<dyn Error>> {",
        "\t${1:unimplemented!();}",
        "\tOk(())",
        "}"
      ],
      "description": "main function with Result",
      "prefix": "main_result",
      "requires": "std::error::Error",
      "scope": "item"
    }
  },
  "search.followSymlinks": false,
  "telemetry.telemetryLevel": "off",
  "testMate.cpp.discovery.strictPattern": false,
  "vscode-neovim.neovimExecutablePaths.darwin": "",
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "~/.config/nvim/init.lua",
  "window.customMenuBarAltFocus": false,
  "window.menuBarVisibility": "hidden",
  "window.restoreFullscreen": true,
  "window.restoreWindows": "none",
  "window.titleBarStyle": "custom",
  "workbench.activityBar.visible": false,
  "workbench.colorTheme": "One Dark Pro Mix",
  "workbench.editor.decorations.badges": false,
  "workbench.editor.decorations.colors": false,
  "workbench.editor.revealIfOpen": true,
  "workbench.editor.tabCloseButton": "off",
  "workbench.editor.tabSizing": "shrink",
  "workbench.layoutControl.enabled": false,
  "workbench.startupEditor": "none"
}
