[
  {
    "command": "-workbench.view.scm",
    "key": "ctrl+shift+g",
    "when": "workbench.scm.active"
  },
  {
    "command": "workbench.action.focusAboveGroup",
    "key": "alt+up"
  },
  {
    "command": "-workbench.action.focusAboveGroup",
    "key": "ctrl+k ctrl+up"
  },
  {
    "command": "workbench.action.focusBelowGroup",
    "key": "alt+down"
  },
  {
    "command": "-workbench.action.focusBelowGroup",
    "key": "ctrl+k ctrl+down"
  },
  {
    "command": "workbench.action.focusLeftGroup",
    "key": "alt+left"
  },
  {
    "command": "-workbench.action.focusLeftGroup",
    "key": "ctrl+k ctrl+left"
  },
  {
    "command": "workbench.action.focusRightGroup",
    "key": "alt+right"
  },
  {
    "command": "-workbench.action.focusRightGroup",
    "key": "ctrl+k ctrl+right"
  },
  {
    "command": "-showNextParameterHint",
    "key": "alt+down",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-showPrevParameterHint",
    "key": "alt+up",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "ctrl+shift+c",
    "when": "!terminalFocus"
  },
  {
    "command": "-editor.action.insertCursorBelow",
    "key": "ctrl+shift+down",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.insertCursorAbove",
    "key": "ctrl+shift+up",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.fold",
    "key": "ctrl+shift+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAll",
    "key": "ctrl+k ctrl+0",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllBlockComments",
    "key": "ctrl+k ctrl+/",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllMarkerRegions",
    "key": "ctrl+k ctrl+8",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldAllExcept",
    "key": "ctrl+k ctrl+-",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel1",
    "key": "ctrl+k ctrl+1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel2",
    "key": "ctrl+k ctrl+2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel3",
    "key": "ctrl+k ctrl+3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel4",
    "key": "ctrl+k ctrl+4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel5",
    "key": "ctrl+k ctrl+5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel6",
    "key": "ctrl+k ctrl+6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldLevel7",
    "key": "ctrl+k ctrl+7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.foldRecursively",
    "key": "ctrl+k ctrl+[",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.triggerSuggest",
    "key": "ctrl+i",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-focusSuggestion",
    "key": "ctrl+i",
    "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "command": "-toggleSuggestionDetails",
    "key": "ctrl+i",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "-leaveSnippet",
    "key": "shift+escape",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+e"
  },
  {
    "command": "-workbench.action.gotoSymbol",
    "key": "ctrl+shift+o"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.gotoLine",
    "key": "ctrl+g"
  },
  {
    "command": "editor.action.showHover",
    "key": "shift+k",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode == 'Normal'"
  },
  {
    "command": "-editor.action.showHover",
    "key": "ctrl+k ctrl+i",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.showTreeHover",
    "key": "ctrl+g h",
    "when": "customTreeView && listFocus && !inputFocus"
  },
  {
    "command": "-workbench.action.showTreeHover",
    "key": "ctrl+k ctrl+i",
    "when": "customTreeView && listFocus && !inputFocus"
  },
  {
    "command": "editor.debug.action.showDebugHover",
    "key": "ctrl+g h",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "command": "-editor.debug.action.showDebugHover",
    "key": "ctrl+k ctrl+i",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "command": "-redo",
    "key": "ctrl+y"
  },
  {
    "command": "-extension.vim_ctrl+b",
    "key": "ctrl+b",
    "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+f",
    "key": "ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+down",
    "key": "ctrl+down",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_cmd+left",
    "key": "meta+left",
    "when": "editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_cmd+right",
    "key": "meta+right",
    "when": "editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_cmd+a",
    "key": "meta+a",
    "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_cmd+alt+down",
    "key": "shift+alt+down",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "command": "-extension.vim_cmd+alt+up",
    "key": "shift+alt+up",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "command": "-extension.vim_cmd+c",
    "key": "meta+c",
    "when": "editorTextFocus && vim.active && vim.overrideCopy && vim.use<D-c> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_cmd+d",
    "key": "meta+d",
    "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_cmd+v",
    "key": "meta+v",
    "when": "editorTextFocus && vim.active && vim.use<D-v> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || editorTextFocus && vim.active && vim.use<D-v> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+g",
    "key": "ctrl+g",
    "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+h",
    "key": "ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+j",
    "key": "ctrl+j",
    "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+k",
    "key": "ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+m",
    "key": "ctrl+m",
    "when": "editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-m> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+left",
    "key": "ctrl+left",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+n",
    "key": "ctrl+n",
    "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+p",
    "key": "ctrl+p",
    "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  {
    "command": "-extension.vim_ctrl+pagedown",
    "key": "ctrl+pagedown",
    "when": "editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+pageup",
    "key": "ctrl+pageup",
    "when": "editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+right",
    "key": "ctrl+right",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-extension.vim_ctrl+s",
    "key": "ctrl+s",
    "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
  },
  {
    "command": "-extension.vim_ctrl+up",
    "key": "ctrl+up",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "command": "-editor.action.formatDocument",
    "key": "ctrl+shift+i",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "command": "-editor.action.formatSelection",
    "key": "ctrl+k ctrl+f",
    "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.revealDefinition",
    "key": "f12",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.goToReferences",
    "key": "shift+f12",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.action.goToImplementation",
    "key": "ctrl+f12",
    "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "command": "-editor.unfoldAll",
    "key": "ctrl+k ctrl+j",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-rust-analyzer.joinLines",
    "key": "ctrl+shift+j",
    "when": "editorTextFocus && editorLangId == 'rust'"
  },
  {
    "command": "-workbench.view.extensions",
    "key": "ctrl+shift+x",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "command": "-workbench.action.keybindingsReference",
    "key": "ctrl+k ctrl+r"
  },
  {
    "command": "-workbench.action.openGlobalKeybindings",
    "key": "ctrl+k ctrl+s"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "f1"
  },
  {
    "command": "-workbench.action.openSettings",
    "key": "ctrl+,"
  },
  {
    "command": "-editor.action.toggleWordWrap",
    "key": "alt+z"
  },
  {
    "command": "-markdown.showPreviewToSide",
    "key": "ctrl+k v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-markdown.showPreview",
    "key": "ctrl+shift+v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.findPrevious",
    "key": "shift+f3",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.findNext",
    "key": "f3",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-editor.action.nextSelectionMatchFindAction",
    "key": "ctrl+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousMatchFindAction",
    "key": "shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.nextMatchFindAction",
    "key": "f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.previousSelectionMatchFindAction",
    "key": "ctrl+shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.selectHighlights",
    "key": "shift+f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.selectHighlights",
    "key": "ctrl+shift+l",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "f3",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.addSelectionToNextFindMatch",
    "key": "ctrl+d",
    "when": "editorFocus"
  },
  {
    "command": "-vscode-neovim.ctrl-f",
    "key": "ctrl+f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.ctrl-b",
    "key": "ctrl+b",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+j",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+j",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+down",
    "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+left",
    "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+right",
    "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+up",
    "when": "neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+h",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+h",
    "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+k",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+l",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "ctrl+p",
    "when": "editorTextFocus && neovim.mode == 'visual'"
  },
  {
    "command": "-vscode-neovim.send",
    "key": "f1",
    "when": "editorTextFocus && neovim.mode == 'visual'"
  },
  {
    "command": "-vscode-neovim.send-cmdline",
    "key": "ctrl+g",
    "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
  },
  {
    "command": "-vscode-neovim.send-cmdline",
    "key": "ctrl+h",
    "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
  },
  {
    "command": "-vscode-neovim.send-cmdline",
    "key": "ctrl+l",
    "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
  },
  {
    "command": "-vscode-neovim.send-cmdline",
    "key": "ctrl+n",
    "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
  },
  {
    "command": "-vscode-neovim.send-cmdline",
    "key": "ctrl+p",
    "when": "neovim.mode == 'cmdline_insert' || neovim.mode == 'cmdline_normal' || neovim.mode == 'cmdline_replace'"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "ctrl+alt+t",
    "when": "terminal.active"
  },
  {
    "command": "-workbench.action.terminal.toggleTerminal",
    "key": "ctrl+`",
    "when": "terminal.active"
  },
  {
    "command": "-editor.action.commentLine",
    "key": "ctrl+/",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.blockComment",
    "key": "ctrl+shift+a",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.removeCommentLine",
    "key": "ctrl+k ctrl+u",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.addCommentLine",
    "key": "ctrl+k ctrl+c",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "ctrl+numpad_add"
  },
  {
    "command": "-workbench.action.zoomReset",
    "key": "ctrl+numpad0"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "ctrl+shift+="
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "ctrl+="
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "ctrl+numpad_subtract"
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "ctrl+-"
  },
  {
    "command": "-editor.action.insertLineBefore",
    "key": "ctrl+shift+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.insertLineAfter",
    "key": "ctrl+enter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.indentLines",
    "key": "ctrl+]",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.outdentLines",
    "key": "ctrl+[",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.removeManualFoldingRanges",
    "key": "ctrl+k ctrl+.",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.toggleFold",
    "key": "ctrl+k ctrl+l",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfold",
    "key": "ctrl+shift+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllMarkerRegions",
    "key": "ctrl+k ctrl+9",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldAllExcept",
    "key": "ctrl+k ctrl+=",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.unfoldRecursively",
    "key": "ctrl+k ctrl+]",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "command": "-editor.action.formatDocument.none",
    "key": "ctrl+shift+i",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "command": "-editor.action.trimTrailingWhitespace",
    "key": "ctrl+k ctrl+x",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.editor.changeLanguageMode",
    "key": "ctrl+k m",
    "when": "!notebookEditorFocused"
  },
  {
    "command": "-workbench.action.toggleEditorGroupLayout",
    "key": "shift+alt+0"
  },
  {
    "command": "-workbench.action.toggleZenMode",
    "key": "ctrl+k z"
  },
  {
    "command": "-workbench.action.exitZenMode",
    "key": "escape escape",
    "when": "inZenMode"
  },
  {
    "command": "-workbench.action.splitEditor",
    "key": "ctrl+\\"
  },
  {
    "command": "-workbench.action.splitEditorInGroup",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "command": "-workbench.action.splitEditorOrthogonal",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "alt+f4"
  },
  {
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "key": "ctrl+tab",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
    "key": "ctrl+tab"
  },
  {
    "command": "workbench.action.quickOpenLeastRecentlyUsedEditor",
    "key": "ctrl+shift+tab"
  },
  {
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "key": "ctrl+shift+tab",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "key": "ctrl+tab",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "key": "ctrl+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "key": "ctrl+shift+tab",
    "when": "inQuickOpen"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "key": "ctrl+shift+tab",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "command": "-workbench.action.quit",
    "key": "ctrl+q"
  },
  {
    "args": "<M-h>",
    "command": "vscode-neovim.send",
    "key": "alt+h"
  },
  {
    "args": "<M-j>",
    "command": "vscode-neovim.send",
    "key": "alt+j"
  },
  {
    "args": "<M-l>",
    "command": "vscode-neovim.send",
    "key": "alt+l"
  },
  {
    "args": "<M-k>",
    "command": "vscode-neovim.send",
    "key": "alt+k"
  },
  {
    "args": "<M-w>",
    "command": "vscode-neovim.send",
    "key": "alt+w"
  },
  {
    "args": "<S-M-w>",
    "command": "vscode-neovim.send",
    "key": "shift+alt+w"
  },
  {
    "args": "<M-e>",
    "command": "vscode-neovim.send",
    "key": "alt+e"
  },
  {
    "command": "editor.action.inlineSuggest.showPrevious",
    "key": "alt+p",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "-editor.action.inlineSuggest.showPrevious",
    "key": "alt+[",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "editor.action.inlineSuggest.showNext",
    "key": "alt+n",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "-editor.action.inlineSuggest.showNext",
    "key": "alt+]",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "command": "editor.action.inlineSuggest.trigger",
    "key": "alt+space",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "command": "-editor.action.inlineSuggest.trigger",
    "key": "alt+\\",
    "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
  },
  {
    "command": "editor.action.inlineSuggest.commit",
    "key": "ctrl+e",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "command": "-editor.action.inlineSuggest.commit",
    "key": "tab",
    "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  },
  {
    "command": "editor.action.inlineSuggest.hide",
    "key": "alt+escape",
    "when": "inlineSuggestionVisible"
  },
  {
    "command": "-editor.action.inlineSuggest.hide",
    "key": "escape",
    "when": "inlineSuggestionVisible"
  },
  {
    "command": "-testing.goToNextMessage",
    "key": "alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "-testing.goToPreviousMessage",
    "key": "shift+alt+f8",
    "when": "editorFocus && testing.isPeekVisible"
  },
  {
    "command": "editor.action.marker.next",
    "key": "f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.next",
    "key": "alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "editor.action.marker.prev",
    "key": "shift+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.prev",
    "key": "shift+alt+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.prevInFiles",
    "key": "shift+f8",
    "when": "editorFocus"
  },
  {
    "command": "-editor.action.marker.nextInFiles",
    "key": "f8",
    "when": "editorFocus"
  }
]
