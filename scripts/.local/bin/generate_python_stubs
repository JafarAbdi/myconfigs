#!/usr/bin/env bash

readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly NC='\033[0m' # No Color

STUBS_DIR="${HOME}/.cache/python-stubs/stubs"

error() {
    echo -e "${RED}Error: ${1}${NC}" >&2
    exit 1
}

warning() {
    echo -e "${YELLOW}Warning: ${1}${NC}" >&2
}

info() {
    echo -e "${GREEN}${1}${NC}"
}

generate_stub() {
    local package=$1

    echo "Generating stubs for ${package}..."
    if ! stubgen -p "${package}" -o "${STUBS_DIR}"; then
        warning "Failed to generate stubs for ${package}"
        return 1
    fi

    if [ -d "${STUBS_DIR}/${package}" ]; then
        cp -r "${STUBS_DIR}/${package}" "$(dirname "${STUBS_DIR}")/${package}-stubs"
    fi
}

get_system_packages() {
    python -c """import os
import pkg_resources
for pkg in pkg_resources.working_set:
    if pkg.location.startswith(os.environ['HOME'] + '/workspaces') or pkg.location.startswith('/opt'):
        print(pkg.project_name.replace('-', '_'))"""
}

get_missing_stubs() {
    local file=$1
    mypy "$file" | grep -oP '(?<=Cannot find implementation or library stub for module named ").*(?=")|(?<=Skipping analyzing ").*(?=": module is installed)|(?<=Library stubs not installed for ").*(?="\.)' | grep -v "numpy" | cut -d. -f1 | sort -u
}

export -f generate_stub warning
export STUBS_DIR RED YELLOW NC

command -v stubgen &> /dev/null || error "stubgen executable doesn't exist"
mkdir -p "${STUBS_DIR}" || error "Failed to create stubs directory '${STUBS_DIR}'"

packages=$([ -n "$1" ] && get_missing_stubs "$1" || get_system_packages)
[ -z "$packages" ] && { info "No packages found"; exit 0; }


echo "$packages" | parallel -j$(nproc) generate_stub {}

info "Stubs generation completed successfully"
