#!/usr/bin/python3
"""A script to run tests on a ROS package using colcon/catkin."""

import argparse
import json
import logging
import os
import re
from pathlib import Path

import argcomplete
from utils import (
    call,
    get_colcon_postfix,
    get_package_paths,
    get_ros_packages,
    run_command,
)

logger = logging.getLogger(__name__)

PATTERN = re.compile(r"\d* tests collected in \d*.\d*s")


def get_tests(package_name: str) -> list[str]:
    """Get tests for a package.

    Args:
        package_name: Package name to get tests from

    Returns:
        List of tests for the input package
    """
    _, build_dir = get_package_paths(package_name)
    ctest_parsed_output = json.loads(
        call(
            [
                "ctest",
                "--show-only=json-v1",
                "--test-dir",
                build_dir,
            ],
        ),
    )

    # TODO(Jafar): Why this doesn't return anything? Running the function outside the autocomplete works fine
    #         "python",
    #         "-m",
    #         "pytest",
    #         "--collect-only",
    #         "--quiet",
    #         "--disable-warnings",
    #         src_dir,
    # ).splitlines()

    return [
        f"{test_name}@ctest"
        for test in ctest_parsed_output["tests"]
        if (test_name := test.get("name"))
    ]  # + [f"{test_name}@pytest" for test_name in pytest_parsed_output if len(test_name) and not PATTERN.match(test_name)]


class TestCompleter:
    """A completer for tests."""

    def __call__(self, prefix: str, parsed_args, **kwargs) -> list[str]:  # noqa: ANN001
        """Call operator overload for TestCompleter.

        Args:
            prefix: Prefix from argparse
            parsed_args: Parse args from argparse
            **kwargs: Extra arguments

        Returns:
            List of tests for the package
        """
        return get_tests(parsed_args.pkg[0])


def main() -> None:
    """Main function."""
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--pkg",
        nargs="+",
        choices=get_ros_packages(Path(os.curdir).resolve() / "src"),
    )
    # nargs??? for ctest it's -L??
    parser.add_argument("--test").completer = TestCompleter()
    parser.add_argument("--verbose", action="store_true", help="")
    parser.add_argument("--dry-run", action="store_true", help="")
    argcomplete.autocomplete(parser)
    args = parser.parse_args()

    postfix = get_colcon_postfix(Path(os.curdir).resolve())

    cmd = [
        "colcon",
        "test",
        "--build-base",
        f"build{postfix}",
        "--install-base",
        f"install{postfix}",
    ]
    if args.pkg:
        cmd += ["--packages-select"]
        cmd += args.pkg
    if args.verbose:
        cmd += ["--event-handlers", "console_direct+"]
    if args.test:
        test, test_type = args.test.split("@")
        if test_type == "pytest":
            cmd += ["--pytest-args", test]
        elif test_type == "ctest":
            cmd += ["--ctest-args", "--tests-regex", test]
    run_command(cmd, args.dry_run)


if __name__ == "__main__":
    main()
